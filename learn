让ranger可以对使用git管理的文件显示其git状态
修改ranger的配置文件rc.conf，set vcs_aware true即可

##########################################################################################
安装完i3后，默认情况下是不会在电脑上生成i3bar的配置文件i3status.conf的,如果需要定制显示i3bar，需要自己建立i3status.conf文件，
之后在修改i3的配置文件config，在bar{}中指定i3bar配置文件所在位置，同时使用配置文件打开i3bar，如下这样：
status_command i3status --config ~/.config/i3/i3status.conf
同时需要将原来在bar{}中的启动i3bar命令注释，即将status_command i3status这句注释掉。

##########################################################################################

系统配置（或者称为i3的配置)
1.在终端上显示背景图片
  第一步：需要安装feh, compton, alacritty三个文件
  feh, 用于显示图片，可以理解为图片浏览器。
  compton, 用于让终端可以背景透明？
  alacritty, 一个第三方的终端模似器，采用GPU来实现界面渲染，速度快，可方便的通过设置配置文件来实现背景透明度设置。

  第二步：需要将三个程序添加到i3的配置文件config中添加自动启动


2.alacritty安装后显示的文字出现重叠问题（这种重叠现象多出现在字符i,e,m与其他字符间）
  解决办法:
  第一步： 安装其他字体，如DaddyTimeMono Nerd Font Mono
  第二步： 修改alacritty的配置文件alacritty.yml文件，将原来的字体换成DaddyTimeMono Nerd Font Mono
  第三步： restart i3


##########################################################################################
Git
1.首次在电脑上使用git上传文件到github仓库时，命令像是这样的：
  git push remote add origin https://github.com/yourRepository

2.之后再次使用git命令上push文件时，使用的命令是: 
  git push 或者git push origin

##########################################################################################
pcmanfc
pcmanfc命令用于打开一个文件浏览器;如果执行pcmanfc --desktop则可以打开桌面，这是在命令行中打开的桌面哟a

###########################################################################################
'airblade/vim-gitgutter'
gitgutter, 用于与git配合，当被编辑的文件在未被保存前，提示哪些行做了调整，比如：修改、删除、增加等。
	一旦文件被保存后，未保存前gitgutter提示的所有标记将被清掉。
	也就是说，gitgutter只会对已经打开并未保存的当前文件有提示，
	如果是从其他目录cp过来的，再被打开，此时gitgutter不会因为与git本地内容不同而有任何提示。
gutter的中文含义是：沟、槽。


###########################################################################################
ctags
用于创建索引，vim8后可以使用自动索引工具ludovicchabant/vim-gutentags，其可异步自动在后台生成索引
但是，实际使用后发现，通过输出gutentags产生tag的进度状态，当前的vim会被卡死，所以还是不用了先。


###########################################################################################
'scrooloose/nerdcommenter'
代码注释/反注释


###########################################################################################
noremap是不会递归的映射 (大概是no recursion)例如noremap Y ynoremap y Y不会出现问题
前缀代表生效范围
inoremap就只在插入(insert)模式下生效
vnoremap只在visual模式下生效
nnoremap就在normal模式下(狂按esc后的模式)生效


###########################################################################################
ufw
打开manjaro的防火墙：sudo ufw enable
查看防火墙状态：sudo ufw status
可以使用图形界面的gufw来查看防火墙配置：sudo gufw


###########################################################################################
安装gcc, gdb(版本10.2.0gcc，9.2gdb)
sudo pacman -S gcc
sudo pacman -S gdb


###########################################################################################
安装flaemshot（版本v0.6.0）
使用方法：
执行flameshot gui -p ~/.myflamshotpic/
在弹出的窗口选择需要截图的区域，点击保存按钮，文件会被保存到目录.myflamshotpic中
注意，flameshot保存路径必须是绝对路径。
https://github.com/flameshot-org/flameshot/


###########################################################################################
显示当前系统所有输入设备
cat /proc/bus/input/devices 



###########################################################################################
确认电脑硬件与系统事件对应关系方法 
以确认鼠标事件为例说明：
第一步：sudo cat /dev/input/event5
第二步：移动鼠标
第三步：观察cat是否有输出，如果有，则此事件即为鼠标事件。


###########################################################################################
安装clang(10.0.1, sudo pacman -S clang), 同时安装coc-clangd
安装上面两项后，写c代码会有语法提示，代码补全。



###########################################################################################
安装cgdb
cgdb,将源码与gdb切成两屏在一个窗口里显示，比都在一屏下的gdb体验好些。
可以使用esc切到上面的源码屏，之后使用vi切回到gdb屏。


###########################################################################################
试用了一下termdebug，体验一般，未深入。


###########################################################################################
关于snazzy插件需要留神的配置
let g:SnazzyTransparent=1
color snazzy "这一句必须放在 let g:SnazzyTransparent=1后面，如果顺序反了透明背景失效！！


###########################################################################################
安装iamcco/markdown-preview.nvim
用于实时预览md文件; github上的README.md使用的就是md类型文件。

注: 其依赖于nodejs, yarn; 因为之前已经安装过nodejs，但yarn未安装，不过在安装markdown-preview时，其自动安装了yarn.
好像是安装到了~/.cache/下


###########################################################################################
动态链接库的管理命令ldconfig


###########################################################################################
安装make
sudo pacman -S make

###########################################################################################
gcc arm交叉编译工具链
1.确认需要的是32bit, 还是64bit, uname -m查一下，我的是x86_64,就是64bit

2.到linaro下载对应的版本
  https://releases.linaro.org/components/toolchain/binaries/latest-7/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz

3.设置工具链环境变量
  export PATH=$PATH:/opt/develop/gcc-linaro-7.5.0-2019.12-rc1-x86_64_arm-linux-gnueabihf/bin/
  export LD_LIBRARY_PATH=/opt/develop/gcc-linaro-7.5.0-2019.12-rc1-x86_64_arm-linux-gnueabihf/lib/
  ldconfig /opt/develop/gcc-linaro-7.5.0-2019.12-rc1-x86_64_arm-linux-gnueabihf/lib/
  
4.
ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make LicheePi_Zero_480x272LCD_defconfig


###########################################################################################
安装libreoffice
sudo pacman -S libreoffice 回车执行后，选择still，另一个可选择项是fresh
still表示稳定版本，fresh表示最新版本


###########################################################################################
安装make(GNU Make 4.3)
sudo pacman -S make


###########################################################################################
安装clam


###########################################################################################
tar打包并gzip压缩
tar -czf outputfilename.tar.gz inputfile

打包并使用bzip2压缩
tar -cjf output.tar.bz2 inputfile

只打包成tar
tar -cvf output.tar inputfile

解压*.gz
tar -xzvf inputfile.tar.gz

解压*.bz2
tar -xjvf inputfile.tar.bz2

解压*.xz
tar -xJvf inputfile.tar.xz
###########################################################################################
安装qemu
sudo pacman -S qemu

###########################################################################################
clangd是LLVM团队开发的C系语言补全器，可以为C、C++、Objective-C等语言提供代码补全、跳转等服务。
作为知名C++ completer，可以与clangd配合工作的编辑器插件不在少数。在Vim编辑器上就有YCM、vim-lsp等插件


###########################################################################################
YouCompleteMe安装
步骤：
1.Plug 'ycm-core/YouCompleteMe' 用vim-plug插件管理器来安装, 在vimrc里
2.执行完成后，进入文件夹YouCompleteMe中，执行python run_tests.py来查一下是否可以正常安装
3.执行python install.py --clangd-completer安装支持c语言自动补全
4.在vimrc中配置let g:ycm_global_ycm_extra_conf='~/.vim/.ycm_extra_conf.py'
  在ycm配置文件.ycm_global_ycm_extra_conf.py的flags里加入如下两行
  '-I',
  '你想要引用的include目录的绝对路径'
注，如果系统中没有安装clang, clangd没有关系，在安装ycm时其会将需要的第三方库自动下载安装，比如
这里的clang, clangd。
另外，上面的步骤2，如果不执行直接跳到3的话，可能也会安装成功，不是必须的。
其他还有一些需要在vimrc中配置的, 直接在github上vim项目中找vimrc.


###########################################################################################
pip3安装python所需插件flake8
这个是我在执行ycm安装前使用run_tests.py检查时提示缺少的一个python程序，
一般情况下，python里少的插件，可以使用
pip3 install someone 安装，比如flake8的安装pip3 install flake8
pip3是一段Python script, 其存放于/usr/bin/pip3


###########################################################################################
hamcrest
这个hamcrest在pip3 install时是找不到的，在pacman里也安装不了，所以需要下载源文件安装
https://github.com/hamcrest/PyHamcrest/archive/V2.0.2.zip
我用的是python语言版本的，还有其他的，如java.
将其解压后进入PyHamcrest-2.0.2，执行python setup.py install来安装hamcrest

###########################################################################################
lspci
查看所有pci设备信息


###########################################################################################
安装cscope
sudo pacman -S cscope
cscope一些常用的命令
:cw  打开quickfix窗口
:cn 下一个匹配项
:cp 上一个匹配项

###########################################################################################
busybox在make时连接时出现找不到crypt静态库问题，查了一下系统上只安装了32位的crypt静态库，还有64位的动态库，而现在的编译环境是64位的gcc, 所以会出现这个问题，当然如果找到libcrypt.a文件的话放到/usr/lib/下就可以了，可是没找到，接下来怎么处理呢？


###########################################################################################
diff file1 file2 -y --suppress-common-lines
对比file1 与 file2有哪些不同, 
	-y表示将两个文件分成左右两列显示
	--suppress-common-lines表示使用-y时，只显示不同之处

说明：
“|”表示前后2个文件内容有不同
“<”表示后面文件比前面文件少了1行内容
“>”表示后面文件比前面文件多了1行内容


###########################################################################################
qemu-x86_64  仅仅模拟CPU

qemu-system-x86_64 模拟整个PC


###########################################################################################
grep 搜索文件里面的内容

grep "printf" x.c x.h    表示查找文件x.c和x.h文件里面是否有字符串printf



###########################################################################################
创建一个磁盘文件、格式化、写入数据、压缩全过程脚本:
sudo dd if=/dev/zero of=ramdisk bs=1M count=32   初始化文件ramdisk(块大小1M，块数量32,用0字符填充)，即初始化一个每块1M总计32M的文件
sudo mkfs.ext4 -F ramdisk                        格式化ramdisk文件
sudo mkdir -p tmpfs
sudo mount -t ext4 ramdisk ./tmpfs/  -o loop     将文件夹tmpfs挂到ramdisk上
sudo cp -raf rootfs/*  tmpfs/                    向tmpfs文件夹写入文件，这个过程就等于向ramdis里写数据
sudo umount tmpfs                                取消挂载
sudo gzip --best -c ramdisk > ramdisk.gz         将ramdisk压缩


###########################################################################################

